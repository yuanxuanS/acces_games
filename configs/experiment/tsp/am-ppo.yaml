# @package _global_

# to execute this experiment run:
# python train.py experiment=example

defaults:
  - override /model: am-ppo.yaml
  - override /env: tsp.yaml
  - override /callbacks: default.yaml
  - override /trainer: default.yaml
  # - override /logger: null # comment this line to enable logging
  - override /logger: wandb.yaml

# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters

env:
  num_loc: 20

tags: ["tsp", "am-PPO", "20"]

task:
  _target_: rl4co.models.rl.ppo.task.PPOTask

logger:
  wandb:
    project: "rl4co-PPO2"
    tags: ${tags}
    group: "tsp${env.num_loc}"
    name: "am-PPO"

seed: 12345

data:
  batch_size: 512
  train_size: 1_280_000
  val_size: 10_000

model:
  clip_range: 0.2
  ppo_epochs: 2
  mini_batch_size: ${..data.batch_size}
  vf_lambda: 0.5
  entropy_lambda: 0.01
  normalize_adv: False
  max_grad_norm: 0.5

trainer:
  min_epochs: 10
  max_epochs: 100
  gradient_clip_val: Null # Will be done internally due to the manual optimization
  accelerator: "gpu"
  devices: 2 # Manual optimization does not support multi-gpu training?
  precision: "32-true"

train:
  optimizer:
    _target_: torch.optim.Adam
    lr: 1e-4
    weight_decay: 0
  scheduler:
    _target_: torch.optim.lr_scheduler.MultiStepLR
    milestones: [80, 95]
    gamma: 0.1
  scheduler_interval: epoch

metrics:
  train: ["loss", "reward", "surrogate_loss", "value_loss", "entropy_bonus"]
